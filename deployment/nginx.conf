upstream doctor_syria {
    server unix:/run/gunicorn.sock fail_timeout=0;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name doctor-syria.com www.doctor-syria.com;
    return 301 https://$server_name$request_uri;
}

# Main server configuration
server {
    listen 443 ssl http2;
    server_name doctor-syria.com www.doctor-syria.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/doctor-syria.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/doctor-syria.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; img-src 'self' https: data: blob:; font-src 'self' https: data:; connect-src 'self' https: wss:;" always;

    # Root directory and logs
    root /var/www/doctor_syria;
    access_log /var/log/nginx/doctor_syria.access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/doctor_syria.error.log warn;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Static and media files
    location /static/ {
        alias /var/www/doctor_syria/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }

    location /media/ {
        alias /var/www/doctor_syria/media/;
        expires 7d;
        add_header Cache-Control "public, no-transform";
        access_log off;
    }

    # Frontend
    location / {
        root /var/www/doctor_syria/frontend/dist;
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, no-cache";
    }

    # API endpoints
    location /api/ {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://doctor_syria;
    }

    # WebSocket support
    location /ws/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://doctor_syria;
    }

    # Health check
    location /health/ {
        access_log off;
        return 200 'healthy\n';
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/doctor_syria/static/error_pages;
    }
}
